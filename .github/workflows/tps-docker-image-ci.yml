# https://github.com/actions/starter-workflows/blob/main/ci/docker-publish.yml
# https://github.com/docker/build-push-action/blob/818fbc81014f50430ad3c990e14d744b09e3b80d/UPGRADE.md#tags-with-ref-and-git-labels

name: TPS Docker Image CI

on:
  push:
    branches:
      - tps/*
    tags:
      - tps/*

  # Run tests for any PRs.
  pull_request:

jobs:

  main:
    name: Push Docker image to GitHub Container Registry
    runs-on: ubuntu-latest
    steps:

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/${{ github.repository }}
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Checkout
        uses: actions/checkout@v2

      - name: TPS Version
        run: |
          echo "${{ steps.prep.outputs.version }}-${GITHUB_SHA::8}" > version.tps.txt

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.tps
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

